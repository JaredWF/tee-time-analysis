
type Library {
  branch: String!
  books: [Book!]
}

# A book has a title and author
type Book {
  title: String!
  author: Author!
}

# An author has a name
type Author {
  name: String!
}

type TestMutationResponse {
  message: String!
}

type TeeTimeChangeResponse {
  courseName: String!
}

type Query {
  test: String!
  libraries: [Library]
}

type Mutation {
  testMutation(testInput: String): TestMutationResponse
  addTeeTimeChange(courseName: String!): TeeTimeChangeResponse
}